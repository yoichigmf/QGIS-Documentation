# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2002-now, QGIS project
# This file is distributed under the same license as the QGIS Documentation
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
# 
# Translators:
# Harrissou Sant-anna, 2024
# tomoya miyoshi, 2024
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation 3.34\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-05-19 15:50+0000\n"
"PO-Revision-Date: 2024-03-02 11:57+0000\n"
"Last-Translator: tomoya miyoshi, 2024\n"
"Language-Team: Japanese (https://app.transifex.com/qgis/teams/6144/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.15.0\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../<rst_prolog>:5
msgid ""
"Translation is a community effort `you can join "
"<https://qgis.org/en/site/getinvolved/translate.html#becoming-a-"
"translator>`_. This page is currently translated at |translation progress|."
msgstr ""
"翻訳は `あなたが参加できる "
"<https://qgis.org/en/site/getinvolved/translate.html#becoming-a-"
"translator>`_ コミュニティの取り組みです。このページは現在 |translation progress| 翻訳されています。"

#: ../../docs/user_manual/processing/console.rst:4
msgid "Using processing algorithms from the console"
msgstr "プロセシングアルゴリズムをコンソールから使う"

#: ../../docs/user_manual/processing/console.rst:11
msgid ""
"The console allows advanced users to increase their productivity and perform"
" complex operations that cannot be performed using any of the other GUI "
"elements of the processing framework. Models involving several algorithms "
"can be defined using the command-line interface, and additional operations "
"such as loops and conditional sentences can be added to create more flexible"
" and powerful workflows."
msgstr ""
"コンソールを使うことによって、上級ユーザは生産性を向上させるとともに、プロセシングフレームワークの他のどのGUI要素を使っても実現できない、複雑な操作ができるようになります。複数のアルゴリズムを必要とするモデルを、コマンドラインインターフェイスを使って定義することができます。さらにループや条件分岐などの処理を加えることによって、より柔軟で強力なワークフローを作りあげることができます。"

#: ../../docs/user_manual/processing/console.rst:18
msgid ""
"There is not a processing console in QGIS, but all processing commands are "
"available instead from the QGIS built-in :ref:`Python console <console>`.  "
"That means that you can incorporate those commands into your console work "
"and connect processing algorithms to all the other features (including "
"methods from the QGIS API) available from there."
msgstr ""
"QGISにプロセシング専用コンソールはありませんが、プロセシングのコマンドのすべてがQGISの内臓 :ref:`Pythonコンソール "
"<console>` で実行可能です。つまりそれらのコマンドをコンソールでの作業に組み込み、コンソールで可能なその他すべての機能（QGIS API "
"からのメソッドもそこに含まれます）と、プロセシングアルゴリズムをつなぐことができるということです。"

#: ../../docs/user_manual/processing/console.rst:24
msgid ""
"The code that you can execute from the Python console, even if it does not "
"call any specific processing method, can be converted into a new algorithm "
"that you can later call from the toolbox, the graphical modeler or any other"
" component, just like you do with any other algorithm. In fact, some "
"algorithms that you can find in the toolbox are simple scripts."
msgstr ""
"Pythonコンソールで実行することのできるコードは、たとえそれが特定のプロセシングメソッドを呼び出していないとしても、その他のすべてのアルゴリズムと同様に、後からツールボックスやグラフィカルモデラーやその他のあらゆるコンポーネントから呼び出すことのできる新しいアルゴリズムに変換することができます。実際にツールボックスにあるアルゴリズムのいくつかは、簡単なスクリプトです。"

#: ../../docs/user_manual/processing/console.rst:31
msgid ""
"In this section, we will see how to use processing algorithms from the QGIS "
"Python console, and also how to write algorithms using Python."
msgstr ""
"このセクションでは、QGIS "
"Pythonコンソールからプロセシングアルゴリズムを使用する方法と、Pythonを使ってアルゴリズムを書く方法を見ていきます。"

#: ../../docs/user_manual/processing/console.rst:35
msgid "Calling algorithms from the Python console"
msgstr "Python コンソールからアルゴリズムを呼び出す"

#: ../../docs/user_manual/processing/console.rst:37
msgid ""
"The first thing you have to do is to import the processing functions with "
"the following line:"
msgstr "最初にやるべきことは、次のコードでプロセシングの機能をインポートすることです。"

#: ../../docs/user_manual/processing/console.rst:44
msgid ""
"Now, there is basically just one (interesting) thing you can do with that "
"from the console: execute an algorithm. That is done using the :meth:`run() "
"<qgis.core.QgsProcessingAlgorithm.run>` method, which takes the name of the "
"algorithm to execute as its first parameter, and then a variable number of "
"additional parameters depending on the requirements of the algorithm. So the"
" first thing you need to know is the name of the algorithm to execute. That "
"is not the name you see in the toolbox, but rather a unique command–line "
"name. To find the right name for your algorithm, you can use the "
":class:`processingRegistry <qgis.core.QgsProcessingRegistry>`. Type the "
"following line in your console:"
msgstr ""
"さて、基本的にコンソールからできる（興味深い）ことはただ一つ、アルゴリズムの実行です。これは :meth:`run() "
"<qgis.core.QgsProcessingAlgorithm.run>` "
"メソッドを使って実行します。このメソッドは最初のパラメータとして実行するアルゴリズムの名前を取り、アルゴリズムの要求に応じて追加のパラメータを可変個数取ります。つまり、最初に知る必要があるのは、実行するアルゴリズムの名前です。これはツールボックスに表示される名前ではなく、一意のコマンドライン名です。あなたのアルゴリズムに適した名前を見つけるには、:class:`processingRegistry"
" <qgis.core.QgsProcessingRegistry>` を使います。コンソールに以下の行を入力してください："

#: ../../docs/user_manual/processing/console.rst:61
msgid ""
"You will see something like this (with some extra dashes added to improve "
"readability)."
msgstr "次のようなものが表示されるはずです（見やすくなるようにダッシュを余計に追加しています）。"

#: ../../docs/user_manual/processing/console.rst:81
msgid ""
"That's a list of all the available algorithm IDs, sorted by provider name "
"and algorithm name, along with their corresponding names."
msgstr "これはすべての利用可能なアルゴリズムのIDと対応する名前のリストです。プロバイダ名とアルゴリズム名でソートされています。"

#: ../../docs/user_manual/processing/console.rst:84
msgid ""
"Once you know the command-line name of the algorithm, the next thing to do "
"is to determine the right syntax to execute it. That means knowing which "
"parameters are needed when calling the ``run()`` method."
msgstr ""
"アルゴリズムのコマンドラインでの名前が分かったら、次にすべきことはアルゴリズムを実行するための正しいシンタックスを確認することです。これは "
"``run()`` メソッドを呼ぶ際に必要なパラメータを確認するということです。"

#: ../../docs/user_manual/processing/console.rst:88
msgid ""
"There is a method to describe an algorithm in detail, which can be used to "
"get a list of the parameters that an algorithm requires and the outputs that"
" it will generate. To get this information, you can use the "
"``algorithmHelp(id_of_the_algorithm)`` method. Use the ID of the algorithm, "
"not the full descriptive name."
msgstr ""
"アルゴリズムを詳細に説明してくれるメソッドがあって、アルゴリズムが必要とするパラメータのリストと、生成される結果を記述してくれます。``algorithmHelp(id_of_the_algorithm)``"
" メソッドを使うとこの情報を得ることができます。アルゴリズムの説明用の名前ではなく、IDを使ってください。"

#: ../../docs/user_manual/processing/console.rst:94
msgid ""
"Calling the method with ``native:buffer`` as parameter (``qgis:buffer`` is "
"an alias for ``native:buffer`` and will also work), you get the following "
"description:"
msgstr ""
"例えば ``native:buffer`` をパラメータとしてこのメソッドを呼び出すと（``qgis:buffer`` は "
"``native:buffer`` のエイリアスなので同様に使えます）、以下のような説明が表示されます。"

#: ../../docs/user_manual/processing/console.rst:222
msgid ""
"Now you have everything you need to run any algorithm. As we have already "
"mentioned, algorithms can be run using: ``run()``. Its syntax is as follows:"
msgstr ""
"これでアルゴリズムの実行に必要なことはすべて分かりました。すでに触れたように、アルゴリズムは ``run()`` "
"を使って実行することができます。シンタックスは次のとおりです:"

#: ../../docs/user_manual/processing/console.rst:230
msgid ""
"Where parameters is a dictionary of parameters that depend on the algorithm "
"you want to run, and is exactly the list that the ``algorithmHelp()`` method"
" gives you."
msgstr ""
"パラメータの箇所には実行したいアルゴリズムに応じたパラメータの辞書がきます。``algorithmHelp()`` "
"メソッドでリストアップされていたものをここで使います。"

#: ../../docs/user_manual/processing/console.rst:247
msgid ""
"If a parameter is optional and you do not want to use it, then don't include"
" it in the dictionary."
msgstr "パラメータが任意のもので、それを使いたくない時は、そのパラメータを辞書に含めないでください。"

#: ../../docs/user_manual/processing/console.rst:250
msgid "If a parameter is not specified, the default value will be used."
msgstr "パラメータが指定されなかった時はデフォルト値が使われます。"

#: ../../docs/user_manual/processing/console.rst:252
msgid ""
"Depending on the type of parameter, values are introduced differently. The "
"next list gives a quick review of how to introduce values for each type of "
"input parameter:"
msgstr "パラメータの種別により値を指定する方法は様々です。次に入力パラメータの種別ごとにその値を指定する方法を簡単に見ていきましょう。"

#: ../../docs/user_manual/processing/console.rst:255
msgid ""
"Raster Layer, Vector Layer or Table. Simply use a string with the name that "
"identifies the data object to use (the name it has in the QGIS Table of "
"Contents) or a filename (if the corresponding layer is not opened, it will "
"be opened but not added to the map canvas). If you have an instance of a "
"QGIS object representing the layer, you can also pass it as parameter."
msgstr ""
"ラスタレイヤ、ベクタレイヤ、テーブル。これらは単純に、使いたいデータオブジェクトの識別名（QGIS "
"TOCが保持している名前）か、もしくはファイル名を文字列で指定してください。ファイル名を指定した場合、対応するレイヤがまだ読み込まれていない場合はファイルを開いて読み込みますが、マップキャンバスには追加されません。レイヤのQGISオブジェクトインスタンスをすでに取得している場合は、これをパラメータとして渡すこともできます。"

#: ../../docs/user_manual/processing/console.rst:260
msgid ""
"Enumeration. If an algorithm has an enumeration parameter, the value of that"
" parameter should be entered using an integer value. To know the available "
"options, you can use the ``algorithmHelp()`` command, as above. For "
"instance, the ``native:buffer`` algorithm has an enumeration called "
"JOIN_STYLE:"
msgstr ""
"列挙。アルゴリズムに列挙パラメータがある場合、そのパラメータの値は整数値で入力する必要があります。利用可能なオプションを知るには、上記のように "
"``algorithmHelp()`` コマンドを使用することができます。例えば、 ``native:buffer`` アルゴリズムには "
"JOIN_STYLE という列挙があります："

#: ../../docs/user_manual/processing/console.rst:281
msgid ""
"In this case, the parameter has three options. Notice that ordering is zero-"
"based."
msgstr "この例では、パラメータは3つの選択肢を持ちます。値は0始まりであることに注意してください。"

#: ../../docs/user_manual/processing/console.rst:283
msgid "Boolean.  Use ``True`` or ``False``."
msgstr "真偽値。``True`` か ``False`` を使用してください。"

#: ../../docs/user_manual/processing/console.rst:284
msgid ""
"Multiple input. The value is a string with input descriptors separated by "
"semicolons (``;``). As in the case of single layers or tables, each input "
"descriptor can be the data object name, or its file path."
msgstr ""
"複数の入力。値は入力を記述したものをセミコロン (``;``) "
"で区切った文字列です。各入力が単一レイヤやテーブルの場合はデータオブジェクト名やファイルパスが使えます。"

#: ../../docs/user_manual/processing/console.rst:287
msgid ""
"Table Field from XXX. Use a string with the name of the field to use. This "
"parameter is case-sensitive."
msgstr "XXX のテーブル項目名。利用する項目名の文字列を使ってください。このパラメータは大文字小文字を区別します。"

#: ../../docs/user_manual/processing/console.rst:289
msgid ""
"Fixed Table. Type the list of all table values separated by commas (``,``) "
"and enclosed between quotes (``\"``). Values start on the upper row and go "
"from left to right. You can also use a 2-D array of values representing the "
"table."
msgstr ""
"固定テーブル。テーブルのすべての値のリストを、各値をカンマ (``,``) で区切った上で、全体を引用符 (``\"``) "
"で囲んで入力します。値は最上位列から始まり、左から右に進みます。テーブルを表す2次元の配列も使えます。"

#: ../../docs/user_manual/processing/console.rst:292
msgid "CRS. Enter the EPSG code number of the desired CRS."
msgstr "CRS。使いたいCRSのEPSGコード番号を入力します。"

#: ../../docs/user_manual/processing/console.rst:293
msgid ""
"Extent. You must use a string with ``xmin``, ``xmax``, ``ymin`` and ``ymax``"
" values separated by commas (``,``)."
msgstr ""
"範囲。``xmin``, ``xmax``, ``ymin`` および ``ymax`` の値を、カンマ ( ``,`` ) "
"で区切って、文字列で指定しなければなりません。"

#: ../../docs/user_manual/processing/console.rst:296
msgid ""
"Boolean, file, string and numerical parameters do not need any additional "
"explanations."
msgstr "真偽値、ファイル、文字列および数値パラメータには特に付け加える説明はありません。"

#: ../../docs/user_manual/processing/console.rst:299
msgid ""
"Input parameters such as strings, booleans, or numerical values have default"
" values. The default value is used if the corresponding parameter entry is "
"missing."
msgstr "文字列、真偽値、数値などの入力パラメータはデフォルト値を持ちます。デフォルト値は対応するパラメータの入力が欠けていた時に使われます。"

#: ../../docs/user_manual/processing/console.rst:302
msgid ""
"For output data objects, type the file path to be used to save it, just as "
"it is done from the toolbox. If the output object is not specified, the "
"result is saved to a temporary file (or skipped if it is an optional "
"output). The extension of the file determines the file format. If you enter "
"a file extension not supported by the algorithm, the default file format for"
" that output type will be used, and its corresponding extension appended to "
"the given file path."
msgstr ""
"出力データオブジェクトには、ツールボックスから実行される時と同様に、それを保存するために使うファイルパスを入力してください。出力オブジェクトが指定されない時は、結果は一時ファイルに保存されます（もしくは出力が任意の時はスキップされます）。ファイルの拡張子はファイルフォーマットから決定されます。アルゴリズムでサポートされていないファイル拡張子を入力した場合は、その出力タイプのデフォルトファイルフォーマットが使われ、それに対応する拡張子が与えられたファイルパスに付加されます。"

#: ../../docs/user_manual/processing/console.rst:348
msgid ""
"If you want to open an algorithm dialog from the console you can use the "
"``createAlgorithmDialog`` method. The only mandatory parameter is the "
"algorithm name, but you can also define the dictionary of parameters so that"
" the dialog will be filled automatically:"
msgstr ""
"コンソールからアルゴリズムダイアログを開きたい場合は、 ``createAlgorithmDialog`` "
"メソッドを使います。必須パラメータはアルゴリズム名だけですが、パラメータの辞書を定義することで、ダイアログを自動的に埋めることもできます："

#: ../../docs/user_manual/processing/console.rst:367
msgid "The ``execAlgorithmDialog`` method opens the dialog immediately:"
msgstr "``execAlgorithmDialog`` メソッドはダイアログをすぐに開きます:"

#: ../../docs/user_manual/processing/console.rst:384
msgid "Creating scripts and running them from the toolbox"
msgstr "スクリプトを作成してツールボックスから実行する"

#: ../../docs/user_manual/processing/console.rst:386
msgid ""
"You can create your own algorithms by writing Python code. Processing "
"scripts extend :class:`QgsProcessingAlgorithm "
"<qgis.core.QgsProcessingAlgorithm>`, so you need to add some extra lines of "
"code to implement mandatory functions. You can find :guilabel:`Create new "
"script` (clean sheet) and :guilabel:`Create New Script from Template` "
"(template that includes code for mandatory functions of "
":class:`QgsProcessingAlgorithm <qgis.core.QgsProcessingAlgorithm>`) under "
"the :guilabel:`Scripts` dropdown menu on the top of the Processing toolbox. "
"The Processing Script Editor will open, and that's where you should type "
"your code. Saving the script from there in the :file:`scripts` folder (the "
"default folder when you open the save file dialog) with a :file:`.py` "
"extension should create the corresponding algorithm."
msgstr ""
"Pythonコードを書くことによって自分独自のアルゴリズムを書くことができます。プロセシングスクリプトは "
":class:`QgsProcessingAlgorithm <qgis.core.QgsProcessingAlgorithm>` "
"クラスを拡張します。そのため必要な機能を実装するためにはそこにさらにコードを追加する必要があります。プロセシングツールボックス最上部の "
":guilabel:`スクリプト` ドロップダウンメニューから :guilabel:`新しいスクリプトを作成...` （白紙）と "
":guilabel:`テンプレートから新しいスクリプトを作成...` （必須の関数 :class:`QgsProcessingAlgorithm "
"<qgis.core.QgsProcessingAlgorithm>` "
"のコードを含むテンプレート）を選ぶことができます。するとコードを入力するためのプロセシングスクリプトエディタが開きます。ここでスクリプトを保存すると "
":file:`scripts` フォルダ（スクリプトを保存ダイアログを開いたときのデフォルトフォルダ）に :file:`.py` "
"拡張子でアルゴリズムとして保存されます。"

#: ../../docs/user_manual/processing/console.rst:401
msgid ""
"The name of the algorithm (the one you will see in the toolbox) is defined "
"within the code."
msgstr "アルゴリズムの名前（ツールボックスに表示されるもの）はコードの中で定義されます。"

#: ../../docs/user_manual/processing/console.rst:404
msgid ""
"Let's have a look at the following code, which defines a Processing "
"algorithm that performs a buffer operation with a user defined buffer "
"distance on a vector layer that is specified by the user, after first "
"smoothing the layer."
msgstr ""
"プロセシングアルゴリズムを定義する次のコード例を見てみましょう。このアルゴリズムは、最初のレイヤ平滑化の後に、ユーザによって指定されたベクタレイヤに対する、ユーザ定義のバッファ距離によるバッファ操作を行うアルゴリズムとして機能するものです。"

#: ../../docs/user_manual/processing/console.rst:469
msgid ""
"After doing the necessary imports, the following "
":class:`QgsProcessingAlgorithm <qgis.core.QgsProcessingAlgorithm>` functions"
" are specified:"
msgstr ""
"必要なインポートを行った後に、続いて :class:`QgsProcessingAlgorithm "
"<qgis.core.QgsProcessingAlgorithm>` の諸関数が定義されます。"

#: ../../docs/user_manual/processing/console.rst:473
msgid ""
":meth:`name() <qgis.core.QgsProcessingAlgorithm.name>`: The id of the "
"algorithm (lowercase)."
msgstr ""
":meth:`name() <qgis.core.QgsProcessingAlgorithm.name>`: アルゴリズムのid（小文字）。"

#: ../../docs/user_manual/processing/console.rst:475
msgid ""
":meth:`displayName() <qgis.core.QgsProcessingAlgorithm.displayName>`: A "
"human readable name for the algorithm."
msgstr ""
":meth:`displayName() <qgis.core.QgsProcessingAlgorithm.displayName>`: "
"アルゴリズムの人が読む名前。"

#: ../../docs/user_manual/processing/console.rst:477
msgid ""
":meth:`createInstance() <qgis.core.QgsProcessingAlgorithm.createInstance>`: "
"Create a new instance of the algorithm class."
msgstr ""
":meth:`createInstance() <qgis.core.QgsProcessingAlgorithm.createInstance>`: "
"アルゴリズムクラスの新しいインスタンスを作る。"

#: ../../docs/user_manual/processing/console.rst:479
msgid ""
":meth:`initAlgorithm() <qgis.core.QgsProcessingAlgorithm.initAlgorithm>`: "
"Configure the parameterDefinitions and outputDefinitions."
msgstr ""
":meth:`initAlgorithm() <qgis.core.QgsProcessingAlgorithm.initAlgorithm>`: "
"parameterDefinitionsと outputDefinitionsを設定する。"

#: ../../docs/user_manual/processing/console.rst:482
msgid ""
"Here you describe the parameters and output of the algorithm.  In this case,"
" a feature source for the input, a feature sink for the result and a number "
"for the buffer distance."
msgstr ""
"ここでアルゴリズムのパラメータと出力を記述します。この例では、入力のためには feature source を、出力結果のためには feature "
"sink とバッファ距離用の数値を定義しています。"

#: ../../docs/user_manual/processing/console.rst:485
msgid ""
":meth:`processAlgorithm() "
"<qgis.core.QgsProcessingAlgorithm.processAlgorithm>`: Do the work."
msgstr ""
":meth:`processAlgorithm() "
"<qgis.core.QgsProcessingAlgorithm.processAlgorithm>`: 処理を行う。"

#: ../../docs/user_manual/processing/console.rst:488
msgid ""
"Here we first run the ``smoothgeometry`` algorithm to smooth the geometry, "
"and then we run the ``buffer`` algorithm on the smoothed output. To be able "
"to run algorithms from within another algorithm we have to set the "
"``is_child_algorithm`` argument to :const:`True`. You can see how input and "
"output parameters are used as parameters to the ``smoothgeometry`` and "
"``buffer`` algorithms."
msgstr ""
"ここでは、まず ``smoothgeometry`` アルゴリズムを実行してジオメトリを平滑化し、次に平滑化された出力に対して ``buffer`` "
"アルゴリズムを実行します。他のアルゴリズムからアルゴリズムを実行するには、 ``is_child_algorithm`` 引数を "
":const:`True` に設定する必要があります。入力パラメータと出力パラメータが ``smoothgeometry`` と ``buffer`` "
"アルゴリズムのパラメータとしてどのように使用されているかを見ることができます。"

#: ../../docs/user_manual/processing/console.rst:496
msgid ""
"There are a number of different parameter types available for input and "
"output. You can find the full list at :ref:`processing_algs_input_output`."
msgstr ""
"入力と出力で利用可能なパラメータ型は数多くあります。完全なリストは :ref:`processing_algs_input_output` にあります。"

#: ../../docs/user_manual/processing/console.rst:499
msgid ""
"The first parameter to the constructors is the name of the parameter, and "
"the second is the description of the parameter (for the user interface). The"
" rest of the constructor parameters are parameter type specific."
msgstr ""
"コンストラクタの最初のパラメータはパラメータ名です。2番目はユーザインターフェイス用のパラメータの説明です。それ以外のパラメータは、パラメータの種別に依存します。"

#: ../../docs/user_manual/processing/console.rst:504
msgid ""
"The input can be turned into QGIS classes using the ``parameterAs`` "
"functions of :class:`QgsProcessingAlgorithm "
"<qgis.core.QgsProcessingAlgorithm>`. For instance to get the number provided"
" for the buffer distance as a double::"
msgstr ""
"入力は :class:`QgsProcessingAlgorithm <qgis.core.QgsProcessingAlgorithm>` クラスの "
"``parameterAs`` 関数によってQGISクラスに変換されます。例えばバッファ距離のために数値を double "
"で取得するには次のようにします。"

#: ../../docs/user_manual/processing/console.rst:510
msgid ""
"The ``processAlgorithm`` function should return a dictionary containing "
"values for every output defined by the algorithm. This allows access to "
"these outputs from other algorithms, including other algorithms contained "
"within the same model."
msgstr ""
"``processAlgorithm`` "
"関数は、アルゴリズムで定義されたすべての出力値を含む辞書を返さなければなりません。これによって、同一モデル内の別のアルゴリズムを含む他のアルゴリズムから、これらの出力にアクセスすることが可能になります。"

#: ../../docs/user_manual/processing/console.rst:515
msgid ""
"Well behaved algorithms should define and return as many outputs as makes "
"sense. Non-feature outputs, such as numbers and strings, are very useful "
"when running your algorithm as part of a larger model, as these values can "
"be used as input parameters for subsequent algorithms within the model. "
"Consider adding numeric outputs for things like the number of features "
"processed, the number of invalid features encountered, the number of "
"features output, etc. The more outputs you return, the more useful your "
"algorithm becomes!"
msgstr ""
"行儀のよいアルゴリズムは、意味のある限りより多くの出力を定義し返さなければなりません。取り立てて特色のない数値や文字列などの出力は、アルゴリズムをより大きなモデルの一部として実行する時に役立ちます。これらの値は、モデル中で続くアルゴリズムの入力パラメータとして使うことができるからです。処理された地物の数や、処理中に見つかった不正な地物の数、出力される地物の数のような数値を、出力に加えることを検討してください。より多くの出力を返せば返すほど、そのアルゴリズムはより役立つものになります。"

#: ../../docs/user_manual/processing/console.rst:525
msgid "Feedback"
msgstr "フィードバック"

#: ../../docs/user_manual/processing/console.rst:527
msgid ""
"The :class:`feedback <qgis.core.QgsProcessingFeedback>` object passed to "
":meth:`processAlgorithm() "
"<qgis.core.QgsProcessingAlgorithm.processAlgorithm>` should be used for user"
" feedback / interaction. You can use the :meth:`setProgress() "
"<qgis.core.QgsFeedback.setProgress>` function of the :class:`feedback "
"<qgis.core.QgsProcessingFeedback>` object to update the progress bar (0 to "
"100) to inform the user about the progress of the algorithm. This is very "
"useful if your algorithm takes a long time to complete."
msgstr ""
":meth:`processAlgorithm() "
"<qgis.core.QgsProcessingAlgorithm.processAlgorithm>` に渡される :class:`feedback "
"<qgis.core.QgsProcessingFeedback>` "
"オブジェクトは、ユーザーからのフィードバックや対話に使用されます。:class:`feedback "
"<qgis.core.QgsProcessingFeedback>` オブジェクトの :meth:`setProgress() "
"<qgis.core.QgsFeedback.setProgress>` "
"関数を使うことで、プログレスバー(0から100)を更新してアルゴリズムの進捗をユーザに知らせることができます。これはアルゴリズムが完了するまでに時間がかかる場合にとても便利です。"

#: ../../docs/user_manual/processing/console.rst:535
msgid ""
"The :class:`feedback <qgis.core.QgsProcessingFeedback>` object provides an "
":meth:`isCanceled() <qgis.core.QgsFeedback.isCanceled>` method that should "
"be monitored to enable cancelation of the algorithm by the user. The "
":meth:`pushInfo() <qgis.core.QgsProcessingFeedback.pushInfo>` method of "
":class:`feedback <qgis.core.QgsProcessingFeedback>` can be used to send "
"information to the user, and :meth:`reportError() "
"<qgis.core.QgsProcessingFeedback.reportError>` is handy for pushing non-"
"fatal errors to users."
msgstr ""
":class:`feedback <qgis.core.QgsProcessingFeedback>` オブジェクトは "
":meth:`isCanceled() <qgis.core.QgsFeedback.isCanceled>` "
"メソッドを提供し、ユーザによるアルゴリズムのキャンセルを可能にするために監視する必要があります。:class:`feedback "
"<qgis.core.QgsProcessingFeedback>` の :meth:`pushInfo() "
"<qgis.core.QgsProcessingFeedback.pushInfo>` メソッドはユーザに情報を送信するために使うことができます。また、"
" :meth:`reportError() <qgis.core.QgsProcessingFeedback.reportError>` "
"は致命的でないエラーをユーザにプッシュするのに便利です。"

#: ../../docs/user_manual/processing/console.rst:543
msgid ""
"Algorithms should avoid using other forms of providing feedback to users, "
"such as print statements or logging to :class:`QgsMessageLog "
"<qgis.core.QgsMessageLog>`, and should always use the feedback object "
"instead. This allows verbose logging for the algorithm, and is also thread-"
"safe (which is important, given that algorithms are typically run in a "
"background thread)."
msgstr ""
"アルゴリズムは、ユーザにフィードバックを提供するprint文や :class:`QgsMessageLog "
"<qgis.core.QgsMessageLog>` "
"へのロギングのような、他の形式の使用を避け、常にフィードバックオブジェクトを使うべきです。これはアルゴリズムに対する冗長なロギングを可能にし、スレッドセーフでもあります(これはアルゴリズムが通常バックグラウンドスレッドで実行されることを考えると重要です)。"

#: ../../docs/user_manual/processing/console.rst:552
msgid "Handling errors"
msgstr "エラーハンドリング"

#: ../../docs/user_manual/processing/console.rst:554
msgid ""
"If your algorithm encounters an error which prevents it from executing, such"
" as invalid input values or some other condition from which it cannot or "
"should not recover, then you should raise a :class:`QgsProcessingException "
"<qgis.core.QgsProcessingException>`. E.g.::"
msgstr ""
"もしアルゴリズムが無効な入力値や回復できない、あるいは回復できないような状態など、実行を妨げるようなエラーに遭遇した場合、 "
":class:`QgsProcessingException <qgis.core.QgsProcessingException>` "
"を発生させるべきです。例．::"

#: ../../docs/user_manual/processing/console.rst:563
msgid ""
"Try to avoid raising :class:`QgsProcessingException "
"<qgis.core.QgsProcessingException>` for non-fatal errors (e.g. when a "
"feature has a null geometry), and instead just report these errors via "
"``feedback.reportError()`` and skip the feature. This helps make your "
"algorithm \"model-friendly\", as it avoids halting the execution of an "
"entire algorithm when a non-fatal error is encountered."
msgstr ""
":class:`QgsProcessingException <qgis.core.QgsProcessingException>` "
"を致命的でないエラー(例えば、地物のジオメトリがNULLの場合など)に対して発生させないようにし、代わりに "
"``feedback.reportError()`` "
"によってこれらのエラーを報告し、その地物をスキップするようにして下さい。これにより、致命的でないエラーに遭遇した際にアルゴリズム全体の実行を停止する必要がなくなるため、アルゴリズムを「モデルフレンドリ」にすることができます。"

#: ../../docs/user_manual/processing/console.rst:573
msgid "Documenting your scripts"
msgstr "スクリプトのドキュメントを作成する"

#: ../../docs/user_manual/processing/console.rst:575
msgid ""
"As in the case of models, you can create additional documentation for your "
"scripts, to explain what they do and how to use them."
msgstr "モデルの場合と同様に、スクリプトの追加ドキュメントを作成して、スクリプトの動作や使用方法を説明することができます。 "

#: ../../docs/user_manual/processing/console.rst:578
msgid ""
":class:`QgsProcessingAlgorithm <qgis.core.QgsProcessingAlgorithm>` provides "
"the :meth:`helpString() <qgis.core.QgsProcessingAlgorithm.helpString>`, "
":meth:`shortHelpString() <qgis.core.QgsProcessingAlgorithm.shortHelpString>`"
" and :meth:`helpUrl() <qgis.core.QgsProcessingAlgorithm.helpUrl>` functions "
"for that purpose. Specify / override these to provide more help to the user."
msgstr ""
":class:`QgsProcessingAlgorithm <qgis.core.QgsProcessingAlgorithm>` は、そのために "
":meth:`helpString() <qgis.core.QgsProcessingAlgorithm.helpString>`, "
":meth:`shortHelpString() <qgis. "
"core.QgsProcessingAlgorithm.shortHelpString>`と :meth:`helpUrl() "
"<qgis.core.QgsProcessingAlgorithm.helpUrl>` "
"関数を使います。ユーザにより多くのヘルプを提供するために、これらを指定/オーバーライドして下さい。"

#: ../../docs/user_manual/processing/console.rst:584
msgid ""
":meth:`shortDescription() "
"<qgis.core.QgsProcessingAlgorithm.shortDescription>` is used in the tooltip "
"when hovering over the algorithm in the toolbox."
msgstr ""
":meth:`shortDescription() "
"<qgis.core.QgsProcessingAlgorithm.shortDescription>` "
"は、ツールボックスでアルゴリズムにカーソルを合わせた時のツールチップで使用されます。"

#: ../../docs/user_manual/processing/console.rst:588
msgid "Pre- and post-execution script hooks"
msgstr "実行前後のスクリプトのフック"

#: ../../docs/user_manual/processing/console.rst:590
msgid ""
"Scripts can also be used as pre- and post-execution hooks that are run "
"before and after an algorithm is run, respectively. This can be used to "
"automate tasks that should be performed whenever an algorithm is executed."
msgstr ""
"スクリプトは、アルゴリズムが実行される前と後にそれぞれ実行される実行前フックと実行後フックとしても使用できます。これは、アルゴリズムが実行されるたびに実行されるべきタスクを自動化するために使用できます。"
" "

#: ../../docs/user_manual/processing/console.rst:594
msgid ""
"The syntax is identical to the syntax explained above, but an additional "
"global variable named ``alg`` is available, representing the algorithm that "
"has just been (or is about to be) executed."
msgstr ""
"文法は上述のものと同様ですが、 ``alg`` "
"という名前のグローバル変数を追加で使用でき、これはたった今(あるいはまさにこれから)実行されるアルゴリズムを表します。"

#: ../../docs/user_manual/processing/console.rst:598
msgid ""
"In the :guilabel:`General` group of the processing options dialog, you will "
"find two entries named :guilabel:`Pre-execution script` and :guilabel:`Post-"
"execution script` where the filenames of the scripts to be run in each case "
"can be entered."
msgstr ""
"プロセシングオプションダイアログの :guilabel:`一般情報` グループには :guilabel:`事前実行スクリプト` と "
":guilabel:`事後実行スクリプト` という2つの項目があり、それぞれのケースで実行するスクリプトのファイル名を入力することができます。"
